package com.shaunhaldane.shaunhaldanebloginitializr.controller;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.shaunhaldane.shaunhaldanebloginitializr.entity.Comment;
import com.shaunhaldane.shaunhaldanebloginitializr.entity.Post;
import com.shaunhaldane.shaunhaldanebloginitializr.entity.Project;
import com.shaunhaldane.shaunhaldanebloginitializr.repository.CommentRepository;
import com.shaunhaldane.shaunhaldanebloginitializr.repository.PostRepository;
import com.shaunhaldane.shaunhaldanebloginitializr.repository.ProjectRepository;
import com.shaunhaldane.shaunhaldanebloginitializr.security.service.UserDetailsServiceImpl;

@CrossOrigin(origins = "*", maxAge = 3600)
@RestController
@RequestMapping("/api/user")
@PreAuthorize("hasRole('USER')")
public class UserController {
	
	@Autowired 
	CommentRepository commentRepository;
	
	@Autowired 
	PostRepository postRepository;
	
	@Autowired 
	ProjectRepository projectRepository;
	
	@Autowired
	private UserDetailsServiceImpl userService;
	
	// Add new comment to post
	@PostMapping("/add-comment/{postId}")
	public String addNewCommentToPost(@Valid @PathVariable("postId") long postId, 
			@RequestBody Comment comment) {
		Post post = postRepository.findById(postId);
		if(post != null) {
			comment.setPost(post);
			comment.setUsername(userService.getLoggedInUser().getUsername());
			commentRepository.save(comment);
			return "Comment posted";
		} else {
			return "Cannot find post";
		}
	}
	
	// Add new comment to project
	@PostMapping("/add-comment/{projectId}")
	public String addNewCommentToProject(@Valid @PathVariable("projectId") long projectId, 
			@RequestBody Comment comment) {
		Project project = projectRepository.findById(projectId);
		if(project != null) {
			comment.setProject(project);
			comment.setUsername(userService.getLoggedInUser().getUsername());
			commentRepository.save(comment);
			return "Comment posted";
		} else {
			return "Cannot find post";
		}
	}

}
